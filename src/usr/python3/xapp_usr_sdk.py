# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.1.1
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.

from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _xapp_usr_sdk
else:
    import _xapp_usr_sdk

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import weakref

class SwigPyIterator(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _xapp_usr_sdk.delete_SwigPyIterator

    def value(self):
        return _xapp_usr_sdk.SwigPyIterator_value(self)

    def incr(self, n=1):
        return _xapp_usr_sdk.SwigPyIterator_incr(self, n)

    def decr(self, n=1):
        return _xapp_usr_sdk.SwigPyIterator_decr(self, n)

    def distance(self, x):
        return _xapp_usr_sdk.SwigPyIterator_distance(self, x)

    def equal(self, x):
        return _xapp_usr_sdk.SwigPyIterator_equal(self, x)

    def copy(self):
        return _xapp_usr_sdk.SwigPyIterator_copy(self)

    def next(self):
        return _xapp_usr_sdk.SwigPyIterator_next(self)

    def __next__(self):
        return _xapp_usr_sdk.SwigPyIterator___next__(self)

    def previous(self):
        return _xapp_usr_sdk.SwigPyIterator_previous(self)

    def advance(self, n):
        return _xapp_usr_sdk.SwigPyIterator_advance(self, n)

    def __eq__(self, x):
        return _xapp_usr_sdk.SwigPyIterator___eq__(self, x)

    def __ne__(self, x):
        return _xapp_usr_sdk.SwigPyIterator___ne__(self, x)

    def __iadd__(self, n):
        return _xapp_usr_sdk.SwigPyIterator___iadd__(self, n)

    def __isub__(self, n):
        return _xapp_usr_sdk.SwigPyIterator___isub__(self, n)

    def __add__(self, n):
        return _xapp_usr_sdk.SwigPyIterator___add__(self, n)

    def __sub__(self, *args):
        return _xapp_usr_sdk.SwigPyIterator___sub__(self, *args)
    def __iter__(self):
        return self

# Register SwigPyIterator in _xapp_usr_sdk:
_xapp_usr_sdk.SwigPyIterator_swigregister(SwigPyIterator)
class E2NodeVector(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self):
        return _xapp_usr_sdk.E2NodeVector_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        return _xapp_usr_sdk.E2NodeVector___nonzero__(self)

    def __bool__(self):
        return _xapp_usr_sdk.E2NodeVector___bool__(self)

    def __len__(self):
        return _xapp_usr_sdk.E2NodeVector___len__(self)

    def __getslice__(self, i, j):
        return _xapp_usr_sdk.E2NodeVector___getslice__(self, i, j)

    def __setslice__(self, *args):
        return _xapp_usr_sdk.E2NodeVector___setslice__(self, *args)

    def __delslice__(self, i, j):
        return _xapp_usr_sdk.E2NodeVector___delslice__(self, i, j)

    def __delitem__(self, *args):
        return _xapp_usr_sdk.E2NodeVector___delitem__(self, *args)

    def __getitem__(self, *args):
        return _xapp_usr_sdk.E2NodeVector___getitem__(self, *args)

    def __setitem__(self, *args):
        return _xapp_usr_sdk.E2NodeVector___setitem__(self, *args)

    def pop(self):
        return _xapp_usr_sdk.E2NodeVector_pop(self)

    def append(self, x):
        return _xapp_usr_sdk.E2NodeVector_append(self, x)

    def empty(self):
        return _xapp_usr_sdk.E2NodeVector_empty(self)

    def size(self):
        return _xapp_usr_sdk.E2NodeVector_size(self)

    def swap(self, v):
        return _xapp_usr_sdk.E2NodeVector_swap(self, v)

    def begin(self):
        return _xapp_usr_sdk.E2NodeVector_begin(self)

    def end(self):
        return _xapp_usr_sdk.E2NodeVector_end(self)

    def rbegin(self):
        return _xapp_usr_sdk.E2NodeVector_rbegin(self)

    def rend(self):
        return _xapp_usr_sdk.E2NodeVector_rend(self)

    def clear(self):
        return _xapp_usr_sdk.E2NodeVector_clear(self)

    def get_allocator(self):
        return _xapp_usr_sdk.E2NodeVector_get_allocator(self)

    def pop_back(self):
        return _xapp_usr_sdk.E2NodeVector_pop_back(self)

    def erase(self, *args):
        return _xapp_usr_sdk.E2NodeVector_erase(self, *args)

    def __init__(self, *args):
        _xapp_usr_sdk.E2NodeVector_swiginit(self, _xapp_usr_sdk.new_E2NodeVector(*args))

    def push_back(self, x):
        return _xapp_usr_sdk.E2NodeVector_push_back(self, x)

    def front(self):
        return _xapp_usr_sdk.E2NodeVector_front(self)

    def back(self):
        return _xapp_usr_sdk.E2NodeVector_back(self)

    def assign(self, n, x):
        return _xapp_usr_sdk.E2NodeVector_assign(self, n, x)

    def resize(self, *args):
        return _xapp_usr_sdk.E2NodeVector_resize(self, *args)

    def insert(self, *args):
        return _xapp_usr_sdk.E2NodeVector_insert(self, *args)

    def reserve(self, n):
        return _xapp_usr_sdk.E2NodeVector_reserve(self, n)

    def capacity(self):
        return _xapp_usr_sdk.E2NodeVector_capacity(self)
    __swig_destroy__ = _xapp_usr_sdk.delete_E2NodeVector

# Register E2NodeVector in _xapp_usr_sdk:
_xapp_usr_sdk.E2NodeVector_swigregister(E2NodeVector)
class UEVector(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self):
        return _xapp_usr_sdk.UEVector_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        return _xapp_usr_sdk.UEVector___nonzero__(self)

    def __bool__(self):
        return _xapp_usr_sdk.UEVector___bool__(self)

    def __len__(self):
        return _xapp_usr_sdk.UEVector___len__(self)

    def __getslice__(self, i, j):
        return _xapp_usr_sdk.UEVector___getslice__(self, i, j)

    def __setslice__(self, *args):
        return _xapp_usr_sdk.UEVector___setslice__(self, *args)

    def __delslice__(self, i, j):
        return _xapp_usr_sdk.UEVector___delslice__(self, i, j)

    def __delitem__(self, *args):
        return _xapp_usr_sdk.UEVector___delitem__(self, *args)

    def __getitem__(self, *args):
        return _xapp_usr_sdk.UEVector___getitem__(self, *args)

    def __setitem__(self, *args):
        return _xapp_usr_sdk.UEVector___setitem__(self, *args)

    def pop(self):
        return _xapp_usr_sdk.UEVector_pop(self)

    def append(self, x):
        return _xapp_usr_sdk.UEVector_append(self, x)

    def empty(self):
        return _xapp_usr_sdk.UEVector_empty(self)

    def size(self):
        return _xapp_usr_sdk.UEVector_size(self)

    def swap(self, v):
        return _xapp_usr_sdk.UEVector_swap(self, v)

    def begin(self):
        return _xapp_usr_sdk.UEVector_begin(self)

    def end(self):
        return _xapp_usr_sdk.UEVector_end(self)

    def rbegin(self):
        return _xapp_usr_sdk.UEVector_rbegin(self)

    def rend(self):
        return _xapp_usr_sdk.UEVector_rend(self)

    def clear(self):
        return _xapp_usr_sdk.UEVector_clear(self)

    def get_allocator(self):
        return _xapp_usr_sdk.UEVector_get_allocator(self)

    def pop_back(self):
        return _xapp_usr_sdk.UEVector_pop_back(self)

    def erase(self, *args):
        return _xapp_usr_sdk.UEVector_erase(self, *args)

    def __init__(self, *args):
        _xapp_usr_sdk.UEVector_swiginit(self, _xapp_usr_sdk.new_UEVector(*args))

    def push_back(self, x):
        return _xapp_usr_sdk.UEVector_push_back(self, x)

    def front(self):
        return _xapp_usr_sdk.UEVector_front(self)

    def back(self):
        return _xapp_usr_sdk.UEVector_back(self)

    def assign(self, n, x):
        return _xapp_usr_sdk.UEVector_assign(self, n, x)

    def resize(self, *args):
        return _xapp_usr_sdk.UEVector_resize(self, *args)

    def insert(self, *args):
        return _xapp_usr_sdk.UEVector_insert(self, *args)

    def reserve(self, n):
        return _xapp_usr_sdk.UEVector_reserve(self, n)

    def capacity(self):
        return _xapp_usr_sdk.UEVector_capacity(self)
    __swig_destroy__ = _xapp_usr_sdk.delete_UEVector

# Register UEVector in _xapp_usr_sdk:
_xapp_usr_sdk.UEVector_swigregister(UEVector)
class UEHOVector(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self):
        return _xapp_usr_sdk.UEHOVector_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        return _xapp_usr_sdk.UEHOVector___nonzero__(self)

    def __bool__(self):
        return _xapp_usr_sdk.UEHOVector___bool__(self)

    def __len__(self):
        return _xapp_usr_sdk.UEHOVector___len__(self)

    def __getslice__(self, i, j):
        return _xapp_usr_sdk.UEHOVector___getslice__(self, i, j)

    def __setslice__(self, *args):
        return _xapp_usr_sdk.UEHOVector___setslice__(self, *args)

    def __delslice__(self, i, j):
        return _xapp_usr_sdk.UEHOVector___delslice__(self, i, j)

    def __delitem__(self, *args):
        return _xapp_usr_sdk.UEHOVector___delitem__(self, *args)

    def __getitem__(self, *args):
        return _xapp_usr_sdk.UEHOVector___getitem__(self, *args)

    def __setitem__(self, *args):
        return _xapp_usr_sdk.UEHOVector___setitem__(self, *args)

    def pop(self):
        return _xapp_usr_sdk.UEHOVector_pop(self)

    def append(self, x):
        return _xapp_usr_sdk.UEHOVector_append(self, x)

    def empty(self):
        return _xapp_usr_sdk.UEHOVector_empty(self)

    def size(self):
        return _xapp_usr_sdk.UEHOVector_size(self)

    def swap(self, v):
        return _xapp_usr_sdk.UEHOVector_swap(self, v)

    def begin(self):
        return _xapp_usr_sdk.UEHOVector_begin(self)

    def end(self):
        return _xapp_usr_sdk.UEHOVector_end(self)

    def rbegin(self):
        return _xapp_usr_sdk.UEHOVector_rbegin(self)

    def rend(self):
        return _xapp_usr_sdk.UEHOVector_rend(self)

    def clear(self):
        return _xapp_usr_sdk.UEHOVector_clear(self)

    def get_allocator(self):
        return _xapp_usr_sdk.UEHOVector_get_allocator(self)

    def pop_back(self):
        return _xapp_usr_sdk.UEHOVector_pop_back(self)

    def erase(self, *args):
        return _xapp_usr_sdk.UEHOVector_erase(self, *args)

    def __init__(self, *args):
        _xapp_usr_sdk.UEHOVector_swiginit(self, _xapp_usr_sdk.new_UEHOVector(*args))

    def push_back(self, x):
        return _xapp_usr_sdk.UEHOVector_push_back(self, x)

    def front(self):
        return _xapp_usr_sdk.UEHOVector_front(self)

    def back(self):
        return _xapp_usr_sdk.UEHOVector_back(self)

    def assign(self, n, x):
        return _xapp_usr_sdk.UEHOVector_assign(self, n, x)

    def resize(self, *args):
        return _xapp_usr_sdk.UEHOVector_resize(self, *args)

    def insert(self, *args):
        return _xapp_usr_sdk.UEHOVector_insert(self, *args)

    def reserve(self, n):
        return _xapp_usr_sdk.UEHOVector_reserve(self, n)

    def capacity(self):
        return _xapp_usr_sdk.UEHOVector_capacity(self)
    __swig_destroy__ = _xapp_usr_sdk.delete_UEHOVector

# Register UEHOVector in _xapp_usr_sdk:
_xapp_usr_sdk.UEHOVector_swigregister(UEHOVector)
class NBHBRCELLVector(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self):
        return _xapp_usr_sdk.NBHBRCELLVector_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        return _xapp_usr_sdk.NBHBRCELLVector___nonzero__(self)

    def __bool__(self):
        return _xapp_usr_sdk.NBHBRCELLVector___bool__(self)

    def __len__(self):
        return _xapp_usr_sdk.NBHBRCELLVector___len__(self)

    def __getslice__(self, i, j):
        return _xapp_usr_sdk.NBHBRCELLVector___getslice__(self, i, j)

    def __setslice__(self, *args):
        return _xapp_usr_sdk.NBHBRCELLVector___setslice__(self, *args)

    def __delslice__(self, i, j):
        return _xapp_usr_sdk.NBHBRCELLVector___delslice__(self, i, j)

    def __delitem__(self, *args):
        return _xapp_usr_sdk.NBHBRCELLVector___delitem__(self, *args)

    def __getitem__(self, *args):
        return _xapp_usr_sdk.NBHBRCELLVector___getitem__(self, *args)

    def __setitem__(self, *args):
        return _xapp_usr_sdk.NBHBRCELLVector___setitem__(self, *args)

    def pop(self):
        return _xapp_usr_sdk.NBHBRCELLVector_pop(self)

    def append(self, x):
        return _xapp_usr_sdk.NBHBRCELLVector_append(self, x)

    def empty(self):
        return _xapp_usr_sdk.NBHBRCELLVector_empty(self)

    def size(self):
        return _xapp_usr_sdk.NBHBRCELLVector_size(self)

    def swap(self, v):
        return _xapp_usr_sdk.NBHBRCELLVector_swap(self, v)

    def begin(self):
        return _xapp_usr_sdk.NBHBRCELLVector_begin(self)

    def end(self):
        return _xapp_usr_sdk.NBHBRCELLVector_end(self)

    def rbegin(self):
        return _xapp_usr_sdk.NBHBRCELLVector_rbegin(self)

    def rend(self):
        return _xapp_usr_sdk.NBHBRCELLVector_rend(self)

    def clear(self):
        return _xapp_usr_sdk.NBHBRCELLVector_clear(self)

    def get_allocator(self):
        return _xapp_usr_sdk.NBHBRCELLVector_get_allocator(self)

    def pop_back(self):
        return _xapp_usr_sdk.NBHBRCELLVector_pop_back(self)

    def erase(self, *args):
        return _xapp_usr_sdk.NBHBRCELLVector_erase(self, *args)

    def __init__(self, *args):
        _xapp_usr_sdk.NBHBRCELLVector_swiginit(self, _xapp_usr_sdk.new_NBHBRCELLVector(*args))

    def push_back(self, x):
        return _xapp_usr_sdk.NBHBRCELLVector_push_back(self, x)

    def front(self):
        return _xapp_usr_sdk.NBHBRCELLVector_front(self)

    def back(self):
        return _xapp_usr_sdk.NBHBRCELLVector_back(self)

    def assign(self, n, x):
        return _xapp_usr_sdk.NBHBRCELLVector_assign(self, n, x)

    def resize(self, *args):
        return _xapp_usr_sdk.NBHBRCELLVector_resize(self, *args)

    def insert(self, *args):
        return _xapp_usr_sdk.NBHBRCELLVector_insert(self, *args)

    def reserve(self, n):
        return _xapp_usr_sdk.NBHBRCELLVector_reserve(self, n)

    def capacity(self):
        return _xapp_usr_sdk.NBHBRCELLVector_capacity(self)
    __swig_destroy__ = _xapp_usr_sdk.delete_NBHBRCELLVector

# Register NBHBRCELLVector in _xapp_usr_sdk:
_xapp_usr_sdk.NBHBRCELLVector_swigregister(NBHBRCELLVector)
class CELLVector(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self):
        return _xapp_usr_sdk.CELLVector_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        return _xapp_usr_sdk.CELLVector___nonzero__(self)

    def __bool__(self):
        return _xapp_usr_sdk.CELLVector___bool__(self)

    def __len__(self):
        return _xapp_usr_sdk.CELLVector___len__(self)

    def __getslice__(self, i, j):
        return _xapp_usr_sdk.CELLVector___getslice__(self, i, j)

    def __setslice__(self, *args):
        return _xapp_usr_sdk.CELLVector___setslice__(self, *args)

    def __delslice__(self, i, j):
        return _xapp_usr_sdk.CELLVector___delslice__(self, i, j)

    def __delitem__(self, *args):
        return _xapp_usr_sdk.CELLVector___delitem__(self, *args)

    def __getitem__(self, *args):
        return _xapp_usr_sdk.CELLVector___getitem__(self, *args)

    def __setitem__(self, *args):
        return _xapp_usr_sdk.CELLVector___setitem__(self, *args)

    def pop(self):
        return _xapp_usr_sdk.CELLVector_pop(self)

    def append(self, x):
        return _xapp_usr_sdk.CELLVector_append(self, x)

    def empty(self):
        return _xapp_usr_sdk.CELLVector_empty(self)

    def size(self):
        return _xapp_usr_sdk.CELLVector_size(self)

    def swap(self, v):
        return _xapp_usr_sdk.CELLVector_swap(self, v)

    def begin(self):
        return _xapp_usr_sdk.CELLVector_begin(self)

    def end(self):
        return _xapp_usr_sdk.CELLVector_end(self)

    def rbegin(self):
        return _xapp_usr_sdk.CELLVector_rbegin(self)

    def rend(self):
        return _xapp_usr_sdk.CELLVector_rend(self)

    def clear(self):
        return _xapp_usr_sdk.CELLVector_clear(self)

    def get_allocator(self):
        return _xapp_usr_sdk.CELLVector_get_allocator(self)

    def pop_back(self):
        return _xapp_usr_sdk.CELLVector_pop_back(self)

    def erase(self, *args):
        return _xapp_usr_sdk.CELLVector_erase(self, *args)

    def __init__(self, *args):
        _xapp_usr_sdk.CELLVector_swiginit(self, _xapp_usr_sdk.new_CELLVector(*args))

    def push_back(self, x):
        return _xapp_usr_sdk.CELLVector_push_back(self, x)

    def front(self):
        return _xapp_usr_sdk.CELLVector_front(self)

    def back(self):
        return _xapp_usr_sdk.CELLVector_back(self)

    def assign(self, n, x):
        return _xapp_usr_sdk.CELLVector_assign(self, n, x)

    def resize(self, *args):
        return _xapp_usr_sdk.CELLVector_resize(self, *args)

    def insert(self, *args):
        return _xapp_usr_sdk.CELLVector_insert(self, *args)

    def reserve(self, n):
        return _xapp_usr_sdk.CELLVector_reserve(self, n)

    def capacity(self):
        return _xapp_usr_sdk.CELLVector_capacity(self)
    __swig_destroy__ = _xapp_usr_sdk.delete_CELLVector

# Register CELLVector in _xapp_usr_sdk:
_xapp_usr_sdk.CELLVector_swigregister(CELLVector)
class PCI_SSB(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    target_pci = property(_xapp_usr_sdk.PCI_SSB_target_pci_get, _xapp_usr_sdk.PCI_SSB_target_pci_set)
    target_ssb_nr_arfcn = property(_xapp_usr_sdk.PCI_SSB_target_ssb_nr_arfcn_get, _xapp_usr_sdk.PCI_SSB_target_ssb_nr_arfcn_set)

    def __init__(self):
        _xapp_usr_sdk.PCI_SSB_swiginit(self, _xapp_usr_sdk.new_PCI_SSB())
    __swig_destroy__ = _xapp_usr_sdk.delete_PCI_SSB

# Register PCI_SSB in _xapp_usr_sdk:
_xapp_usr_sdk.PCI_SSB_swigregister(PCI_SSB)
class UE_HO(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ue = property(_xapp_usr_sdk.UE_HO_ue_get, _xapp_usr_sdk.UE_HO_ue_set)
    nghbr_cell = property(_xapp_usr_sdk.UE_HO_nghbr_cell_get, _xapp_usr_sdk.UE_HO_nghbr_cell_set)

    def __init__(self):
        _xapp_usr_sdk.UE_HO_swiginit(self, _xapp_usr_sdk.new_UE_HO())
    __swig_destroy__ = _xapp_usr_sdk.delete_UE_HO

# Register UE_HO in _xapp_usr_sdk:
_xapp_usr_sdk.UE_HO_swigregister(UE_HO)
class E2NodeData(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    node = property(_xapp_usr_sdk.E2NodeData_node_get, _xapp_usr_sdk.E2NodeData_node_set)
    ue_ho = property(_xapp_usr_sdk.E2NodeData_ue_ho_get, _xapp_usr_sdk.E2NodeData_ue_ho_set)
    cell = property(_xapp_usr_sdk.E2NodeData_cell_get, _xapp_usr_sdk.E2NodeData_cell_set)

    def __init__(self):
        _xapp_usr_sdk.E2NodeData_swiginit(self, _xapp_usr_sdk.new_E2NodeData())
    __swig_destroy__ = _xapp_usr_sdk.delete_E2NodeData

# Register E2NodeData in _xapp_usr_sdk:
_xapp_usr_sdk.E2NodeData_swigregister(E2NodeData)

def init(argv):
    return _xapp_usr_sdk.init(argv)

def e2_nodes(uc):
    return _xapp_usr_sdk.e2_nodes(uc)

def mntr(node, var):
    return _xapp_usr_sdk.mntr(node, var)
class mntr_cb_fn(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def cb(self, v):
        return _xapp_usr_sdk.mntr_cb_fn_cb(self, v)
    __swig_destroy__ = _xapp_usr_sdk.delete_mntr_cb_fn

    def __init__(self):
        if self.__class__ == mntr_cb_fn:
            _self = None
        else:
            _self = self
        _xapp_usr_sdk.mntr_cb_fn_swiginit(self, _xapp_usr_sdk.new_mntr_cb_fn(_self, ))
    def __disown__(self):
        self.this.disown()
        _xapp_usr_sdk.disown_mntr_cb_fn(self)
        return weakref.proxy(self)

# Register mntr_cb_fn in _xapp_usr_sdk:
_xapp_usr_sdk.mntr_cb_fn_swigregister(mntr_cb_fn)

def mntr_cb(n, v, p, cb):
    return _xapp_usr_sdk.mntr_cb(n, v, p, cb)

def mntr_ue(node, ue, var):
    return _xapp_usr_sdk.mntr_ue(node, ue, var)

def mntr_ue_cb(node, ue, var, p, cb):
    return _xapp_usr_sdk.mntr_ue_cb(node, ue, var, p, cb)

def stop_mntr(st):
    return _xapp_usr_sdk.stop_mntr(st)

def hand_over(n, ue, target_pci, target_ssb_nr_arfcn):
    return _xapp_usr_sdk.hand_over(n, ue, target_pci, target_ssb_nr_arfcn)

def slice(n, sst, sd, dedicated_prb):
    return _xapp_usr_sdk.slice(n, sst, sd, dedicated_prb)

def bandwidth_part(n, cell, bwp_context, start_rb, number_rb):
    return _xapp_usr_sdk.bandwidth_part(n, cell, bwp_context, start_rb, number_rb)

def bw_reconf(n, cell, band, new_bw):
    return _xapp_usr_sdk.bw_reconf(n, cell, band, new_bw)
PDCP_SDU_VOLUME_DL = _xapp_usr_sdk.PDCP_SDU_VOLUME_DL
PDCP_SDU_VOLUME_UL = _xapp_usr_sdk.PDCP_SDU_VOLUME_UL
RLC_SDU_DELAY_DL = _xapp_usr_sdk.RLC_SDU_DELAY_DL
UE_THP_DL = _xapp_usr_sdk.UE_THP_DL
UE_THP_UL = _xapp_usr_sdk.UE_THP_UL
PRB_TOT_DL = _xapp_usr_sdk.PRB_TOT_DL
PRB_TOT_UL = _xapp_usr_sdk.PRB_TOT_UL
PDSCH_MCS = _xapp_usr_sdk.PDSCH_MCS
END_MNTR_VAR_E = _xapp_usr_sdk.END_MNTR_VAR_E
PERIODICITY_1_MS = _xapp_usr_sdk.PERIODICITY_1_MS
PERIODICITY_2_MS = _xapp_usr_sdk.PERIODICITY_2_MS
PERIODICITY_5_MS = _xapp_usr_sdk.PERIODICITY_5_MS
PERIODICITY_10_MS = _xapp_usr_sdk.PERIODICITY_10_MS
PERIODICITY_20_MS = _xapp_usr_sdk.PERIODICITY_20_MS
PERIODICITY_50_MS = _xapp_usr_sdk.PERIODICITY_50_MS
PERIODICITY_100_MS = _xapp_usr_sdk.PERIODICITY_100_MS
PERIODICITY_200_MS = _xapp_usr_sdk.PERIODICITY_200_MS
PERIODICITY_500_MS = _xapp_usr_sdk.PERIODICITY_500_MS
PERIODICITY_1000_MS = _xapp_usr_sdk.PERIODICITY_1000_MS
END_PERIODICITY_E = _xapp_usr_sdk.END_PERIODICITY_E
BWP_USE_CASE_e = _xapp_usr_sdk.BWP_USE_CASE_e
HAND_OVER_USE_CASE_e = _xapp_usr_sdk.HAND_OVER_USE_CASE_e
MONITOR_USE_CASE_e = _xapp_usr_sdk.MONITOR_USE_CASE_e
SLICE_USE_CASE_e = _xapp_usr_sdk.SLICE_USE_CASE_e
END_USE_CASE_e = _xapp_usr_sdk.END_USE_CASE_e
class stop_token_t(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ric_req_id = property(_xapp_usr_sdk.stop_token_t_ric_req_id_get, _xapp_usr_sdk.stop_token_t_ric_req_id_set)

    def __init__(self):
        _xapp_usr_sdk.stop_token_t_swiginit(self, _xapp_usr_sdk.new_stop_token_t())
    __swig_destroy__ = _xapp_usr_sdk.delete_stop_token_t

# Register stop_token_t in _xapp_usr_sdk:
_xapp_usr_sdk.stop_token_t_swigregister(stop_token_t)
class e2ap_gnb_id_sdk_t(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    nb_id = property(_xapp_usr_sdk.e2ap_gnb_id_sdk_t_nb_id_get, _xapp_usr_sdk.e2ap_gnb_id_sdk_t_nb_id_set)
    unused = property(_xapp_usr_sdk.e2ap_gnb_id_sdk_t_unused_get, _xapp_usr_sdk.e2ap_gnb_id_sdk_t_unused_set)

    def __init__(self):
        _xapp_usr_sdk.e2ap_gnb_id_sdk_t_swiginit(self, _xapp_usr_sdk.new_e2ap_gnb_id_sdk_t())
    __swig_destroy__ = _xapp_usr_sdk.delete_e2ap_gnb_id_sdk_t

# Register e2ap_gnb_id_sdk_t in _xapp_usr_sdk:
_xapp_usr_sdk.e2ap_gnb_id_sdk_t_swigregister(e2ap_gnb_id_sdk_t)
class e2ap_plmn_sdk_t(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    mcc = property(_xapp_usr_sdk.e2ap_plmn_sdk_t_mcc_get, _xapp_usr_sdk.e2ap_plmn_sdk_t_mcc_set)
    mnc = property(_xapp_usr_sdk.e2ap_plmn_sdk_t_mnc_get, _xapp_usr_sdk.e2ap_plmn_sdk_t_mnc_set)
    mnc_digit_len = property(_xapp_usr_sdk.e2ap_plmn_sdk_t_mnc_digit_len_get, _xapp_usr_sdk.e2ap_plmn_sdk_t_mnc_digit_len_set)

    def __init__(self):
        _xapp_usr_sdk.e2ap_plmn_sdk_t_swiginit(self, _xapp_usr_sdk.new_e2ap_plmn_sdk_t())
    __swig_destroy__ = _xapp_usr_sdk.delete_e2ap_plmn_sdk_t

# Register e2ap_plmn_sdk_t in _xapp_usr_sdk:
_xapp_usr_sdk.e2ap_plmn_sdk_t_swigregister(e2ap_plmn_sdk_t)
e2ap_ngran_eNB_SDK = _xapp_usr_sdk.e2ap_ngran_eNB_SDK
e2ap_ngran_ng_eNB_SDK = _xapp_usr_sdk.e2ap_ngran_ng_eNB_SDK
e2ap_ngran_gNB_SDK = _xapp_usr_sdk.e2ap_ngran_gNB_SDK
e2ap_ngran_eNB_CU_SDK = _xapp_usr_sdk.e2ap_ngran_eNB_CU_SDK
e2ap_ngran_ng_eNB_CU_SDK = _xapp_usr_sdk.e2ap_ngran_ng_eNB_CU_SDK
e2ap_ngran_gNB_CU_SDK = _xapp_usr_sdk.e2ap_ngran_gNB_CU_SDK
e2ap_ngran_eNB_DU_SDK = _xapp_usr_sdk.e2ap_ngran_eNB_DU_SDK
e2ap_ngran_gNB_DU_SDK = _xapp_usr_sdk.e2ap_ngran_gNB_DU_SDK
e2ap_ngran_eNB_MBMS_STA_SDK = _xapp_usr_sdk.e2ap_ngran_eNB_MBMS_STA_SDK
e2ap_ngran_gNB_CUCP_SDK = _xapp_usr_sdk.e2ap_ngran_gNB_CUCP_SDK
e2ap_ngran_gNB_CUUP_SDK = _xapp_usr_sdk.e2ap_ngran_gNB_CUUP_SDK
END_E2AP_NGRAN_NODE_TYPE_SDK = _xapp_usr_sdk.END_E2AP_NGRAN_NODE_TYPE_SDK
class global_e2_node_id_sdk_t(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    type = property(_xapp_usr_sdk.global_e2_node_id_sdk_t_type_get, _xapp_usr_sdk.global_e2_node_id_sdk_t_type_set)
    plmn = property(_xapp_usr_sdk.global_e2_node_id_sdk_t_plmn_get, _xapp_usr_sdk.global_e2_node_id_sdk_t_plmn_set)
    nb_id = property(_xapp_usr_sdk.global_e2_node_id_sdk_t_nb_id_get, _xapp_usr_sdk.global_e2_node_id_sdk_t_nb_id_set)
    cu_du_id = property(_xapp_usr_sdk.global_e2_node_id_sdk_t_cu_du_id_get, _xapp_usr_sdk.global_e2_node_id_sdk_t_cu_du_id_set)

    def __init__(self):
        _xapp_usr_sdk.global_e2_node_id_sdk_t_swiginit(self, _xapp_usr_sdk.new_global_e2_node_id_sdk_t())
    __swig_destroy__ = _xapp_usr_sdk.delete_global_e2_node_id_sdk_t

# Register global_e2_node_id_sdk_t in _xapp_usr_sdk:
_xapp_usr_sdk.global_e2_node_id_sdk_t_swigregister(global_e2_node_id_sdk_t)
GNB_UE_ID_E2SM_SDK = _xapp_usr_sdk.GNB_UE_ID_E2SM_SDK
GNB_DU_UE_ID_E2SM_SDK = _xapp_usr_sdk.GNB_DU_UE_ID_E2SM_SDK
GNB_CU_UP_UE_ID_E2SM_SDK = _xapp_usr_sdk.GNB_CU_UP_UE_ID_E2SM_SDK
NG_ENB_UE_ID_E2SM_SDK = _xapp_usr_sdk.NG_ENB_UE_ID_E2SM_SDK
NG_ENB_DU_UE_ID_E2SM_SDK = _xapp_usr_sdk.NG_ENB_DU_UE_ID_E2SM_SDK
EN_GNB_UE_ID_E2SM_SDK = _xapp_usr_sdk.EN_GNB_UE_ID_E2SM_SDK
ENB_UE_ID_E2SM_SDK = _xapp_usr_sdk.ENB_UE_ID_E2SM_SDK
END_UE_ID_E2SM_SDK = _xapp_usr_sdk.END_UE_ID_E2SM_SDK
class e2sm_plmn_sdk_t(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    mcc = property(_xapp_usr_sdk.e2sm_plmn_sdk_t_mcc_get, _xapp_usr_sdk.e2sm_plmn_sdk_t_mcc_set)
    mnc = property(_xapp_usr_sdk.e2sm_plmn_sdk_t_mnc_get, _xapp_usr_sdk.e2sm_plmn_sdk_t_mnc_set)
    mnc_digit_len = property(_xapp_usr_sdk.e2sm_plmn_sdk_t_mnc_digit_len_get, _xapp_usr_sdk.e2sm_plmn_sdk_t_mnc_digit_len_set)

    def __init__(self):
        _xapp_usr_sdk.e2sm_plmn_sdk_t_swiginit(self, _xapp_usr_sdk.new_e2sm_plmn_sdk_t())
    __swig_destroy__ = _xapp_usr_sdk.delete_e2sm_plmn_sdk_t

# Register e2sm_plmn_sdk_t in _xapp_usr_sdk:
_xapp_usr_sdk.e2sm_plmn_sdk_t_swigregister(e2sm_plmn_sdk_t)
class guami_sdk_t(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    plmn_id = property(_xapp_usr_sdk.guami_sdk_t_plmn_id_get, _xapp_usr_sdk.guami_sdk_t_plmn_id_set)
    amf_region_id = property(_xapp_usr_sdk.guami_sdk_t_amf_region_id_get, _xapp_usr_sdk.guami_sdk_t_amf_region_id_set)
    amf_set_id = property(_xapp_usr_sdk.guami_sdk_t_amf_set_id_get, _xapp_usr_sdk.guami_sdk_t_amf_set_id_set)
    amf_ptr = property(_xapp_usr_sdk.guami_sdk_t_amf_ptr_get, _xapp_usr_sdk.guami_sdk_t_amf_ptr_set)

    def __init__(self):
        _xapp_usr_sdk.guami_sdk_t_swiginit(self, _xapp_usr_sdk.new_guami_sdk_t())
    __swig_destroy__ = _xapp_usr_sdk.delete_guami_sdk_t

# Register guami_sdk_t in _xapp_usr_sdk:
_xapp_usr_sdk.guami_sdk_t_swigregister(guami_sdk_t)
GNB_TYPE_ID_SDK = _xapp_usr_sdk.GNB_TYPE_ID_SDK
END_TYPE_ID_SDK = _xapp_usr_sdk.END_TYPE_ID_SDK
class global_gnb_id_sdk_t(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    plmn_id = property(_xapp_usr_sdk.global_gnb_id_sdk_t_plmn_id_get, _xapp_usr_sdk.global_gnb_id_sdk_t_plmn_id_set)
    type = property(_xapp_usr_sdk.global_gnb_id_sdk_t_type_get, _xapp_usr_sdk.global_gnb_id_sdk_t_type_set)
    gnb_id = property(_xapp_usr_sdk.global_gnb_id_sdk_t_gnb_id_get, _xapp_usr_sdk.global_gnb_id_sdk_t_gnb_id_set)

    def __init__(self):
        _xapp_usr_sdk.global_gnb_id_sdk_t_swiginit(self, _xapp_usr_sdk.new_global_gnb_id_sdk_t())
    __swig_destroy__ = _xapp_usr_sdk.delete_global_gnb_id_sdk_t

# Register global_gnb_id_sdk_t in _xapp_usr_sdk:
_xapp_usr_sdk.global_gnb_id_sdk_t_swigregister(global_gnb_id_sdk_t)
GNB_GLOBAL_TYPE_ID_SDK = _xapp_usr_sdk.GNB_GLOBAL_TYPE_ID_SDK
NG_ENB_GLOBAL_TYPE_ID_SDK = _xapp_usr_sdk.NG_ENB_GLOBAL_TYPE_ID_SDK
END_GLOBAL_TYPE_ID_SDK = _xapp_usr_sdk.END_GLOBAL_TYPE_ID_SDK
class global_ng_ran_node_id_sdk_t(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    type = property(_xapp_usr_sdk.global_ng_ran_node_id_sdk_t_type_get, _xapp_usr_sdk.global_ng_ran_node_id_sdk_t_type_set)
    global_gnb_id = property(_xapp_usr_sdk.global_ng_ran_node_id_sdk_t_global_gnb_id_get, _xapp_usr_sdk.global_ng_ran_node_id_sdk_t_global_gnb_id_set)

    def __init__(self):
        _xapp_usr_sdk.global_ng_ran_node_id_sdk_t_swiginit(self, _xapp_usr_sdk.new_global_ng_ran_node_id_sdk_t())
    __swig_destroy__ = _xapp_usr_sdk.delete_global_ng_ran_node_id_sdk_t

# Register global_ng_ran_node_id_sdk_t in _xapp_usr_sdk:
_xapp_usr_sdk.global_ng_ran_node_id_sdk_t_swigregister(global_ng_ran_node_id_sdk_t)
class gnb_e2sm_sdk_t(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    amf_ue_ngap_id = property(_xapp_usr_sdk.gnb_e2sm_sdk_t_amf_ue_ngap_id_get, _xapp_usr_sdk.gnb_e2sm_sdk_t_amf_ue_ngap_id_set)
    guami = property(_xapp_usr_sdk.gnb_e2sm_sdk_t_guami_get, _xapp_usr_sdk.gnb_e2sm_sdk_t_guami_set)
    gnb_cu_ue_f1ap_lst_len = property(_xapp_usr_sdk.gnb_e2sm_sdk_t_gnb_cu_ue_f1ap_lst_len_get, _xapp_usr_sdk.gnb_e2sm_sdk_t_gnb_cu_ue_f1ap_lst_len_set)
    gnb_cu_ue_f1ap_lst = property(_xapp_usr_sdk.gnb_e2sm_sdk_t_gnb_cu_ue_f1ap_lst_get, _xapp_usr_sdk.gnb_e2sm_sdk_t_gnb_cu_ue_f1ap_lst_set)
    gnb_cu_cp_ue_e1ap_lst_len = property(_xapp_usr_sdk.gnb_e2sm_sdk_t_gnb_cu_cp_ue_e1ap_lst_len_get, _xapp_usr_sdk.gnb_e2sm_sdk_t_gnb_cu_cp_ue_e1ap_lst_len_set)
    gnb_cu_cp_ue_e1ap_lst = property(_xapp_usr_sdk.gnb_e2sm_sdk_t_gnb_cu_cp_ue_e1ap_lst_get, _xapp_usr_sdk.gnb_e2sm_sdk_t_gnb_cu_cp_ue_e1ap_lst_set)
    ran_ue_id = property(_xapp_usr_sdk.gnb_e2sm_sdk_t_ran_ue_id_get, _xapp_usr_sdk.gnb_e2sm_sdk_t_ran_ue_id_set)
    ng_ran_node_ue_xnap_id = property(_xapp_usr_sdk.gnb_e2sm_sdk_t_ng_ran_node_ue_xnap_id_get, _xapp_usr_sdk.gnb_e2sm_sdk_t_ng_ran_node_ue_xnap_id_set)
    global_gnb_id = property(_xapp_usr_sdk.gnb_e2sm_sdk_t_global_gnb_id_get, _xapp_usr_sdk.gnb_e2sm_sdk_t_global_gnb_id_set)
    global_ng_ran_node_id = property(_xapp_usr_sdk.gnb_e2sm_sdk_t_global_ng_ran_node_id_get, _xapp_usr_sdk.gnb_e2sm_sdk_t_global_ng_ran_node_id_set)

    def __init__(self):
        _xapp_usr_sdk.gnb_e2sm_sdk_t_swiginit(self, _xapp_usr_sdk.new_gnb_e2sm_sdk_t())
    __swig_destroy__ = _xapp_usr_sdk.delete_gnb_e2sm_sdk_t

# Register gnb_e2sm_sdk_t in _xapp_usr_sdk:
_xapp_usr_sdk.gnb_e2sm_sdk_t_swigregister(gnb_e2sm_sdk_t)
class gnb_du_e2sm_sdk_t(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    gnb_cu_ue_f1ap = property(_xapp_usr_sdk.gnb_du_e2sm_sdk_t_gnb_cu_ue_f1ap_get, _xapp_usr_sdk.gnb_du_e2sm_sdk_t_gnb_cu_ue_f1ap_set)
    ran_ue_id = property(_xapp_usr_sdk.gnb_du_e2sm_sdk_t_ran_ue_id_get, _xapp_usr_sdk.gnb_du_e2sm_sdk_t_ran_ue_id_set)

    def __init__(self):
        _xapp_usr_sdk.gnb_du_e2sm_sdk_t_swiginit(self, _xapp_usr_sdk.new_gnb_du_e2sm_sdk_t())
    __swig_destroy__ = _xapp_usr_sdk.delete_gnb_du_e2sm_sdk_t

# Register gnb_du_e2sm_sdk_t in _xapp_usr_sdk:
_xapp_usr_sdk.gnb_du_e2sm_sdk_t_swigregister(gnb_du_e2sm_sdk_t)
class gnb_cu_up_e2sm_sdk_t(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    gnb_cu_cp_ue_e1ap = property(_xapp_usr_sdk.gnb_cu_up_e2sm_sdk_t_gnb_cu_cp_ue_e1ap_get, _xapp_usr_sdk.gnb_cu_up_e2sm_sdk_t_gnb_cu_cp_ue_e1ap_set)
    ran_ue_id = property(_xapp_usr_sdk.gnb_cu_up_e2sm_sdk_t_ran_ue_id_get, _xapp_usr_sdk.gnb_cu_up_e2sm_sdk_t_ran_ue_id_set)

    def __init__(self):
        _xapp_usr_sdk.gnb_cu_up_e2sm_sdk_t_swiginit(self, _xapp_usr_sdk.new_gnb_cu_up_e2sm_sdk_t())
    __swig_destroy__ = _xapp_usr_sdk.delete_gnb_cu_up_e2sm_sdk_t

# Register gnb_cu_up_e2sm_sdk_t in _xapp_usr_sdk:
_xapp_usr_sdk.gnb_cu_up_e2sm_sdk_t_swigregister(gnb_cu_up_e2sm_sdk_t)
class ue_id_e2sm_sdk_u(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    gnb = property(_xapp_usr_sdk.ue_id_e2sm_sdk_u_gnb_get, _xapp_usr_sdk.ue_id_e2sm_sdk_u_gnb_set)
    gnb_du = property(_xapp_usr_sdk.ue_id_e2sm_sdk_u_gnb_du_get, _xapp_usr_sdk.ue_id_e2sm_sdk_u_gnb_du_set)
    gnb_cu_up = property(_xapp_usr_sdk.ue_id_e2sm_sdk_u_gnb_cu_up_get, _xapp_usr_sdk.ue_id_e2sm_sdk_u_gnb_cu_up_set)

    def __init__(self):
        _xapp_usr_sdk.ue_id_e2sm_sdk_u_swiginit(self, _xapp_usr_sdk.new_ue_id_e2sm_sdk_u())
    __swig_destroy__ = _xapp_usr_sdk.delete_ue_id_e2sm_sdk_u

# Register ue_id_e2sm_sdk_u in _xapp_usr_sdk:
_xapp_usr_sdk.ue_id_e2sm_sdk_u_swigregister(ue_id_e2sm_sdk_u)
class ue_id_e2sm_sdk_t(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    type = property(_xapp_usr_sdk.ue_id_e2sm_sdk_t_type_get, _xapp_usr_sdk.ue_id_e2sm_sdk_t_type_set)
    u = property(_xapp_usr_sdk.ue_id_e2sm_sdk_t_u_get, _xapp_usr_sdk.ue_id_e2sm_sdk_t_u_set)

    def __init__(self):
        _xapp_usr_sdk.ue_id_e2sm_sdk_t_swiginit(self, _xapp_usr_sdk.new_ue_id_e2sm_sdk_t())
    __swig_destroy__ = _xapp_usr_sdk.delete_ue_id_e2sm_sdk_t

# Register ue_id_e2sm_sdk_t in _xapp_usr_sdk:
_xapp_usr_sdk.ue_id_e2sm_sdk_t_swigregister(ue_id_e2sm_sdk_t)
NR_RAT_TYPE_SDK = _xapp_usr_sdk.NR_RAT_TYPE_SDK
EUTRA_RAT_TYPE_SDK = _xapp_usr_sdk.EUTRA_RAT_TYPE_SDK
END_CGI_RAT_TYPE_SDK = _xapp_usr_sdk.END_CGI_RAT_TYPE_SDK
class nr_cgi_sdk_t(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    plmn_id = property(_xapp_usr_sdk.nr_cgi_sdk_t_plmn_id_get, _xapp_usr_sdk.nr_cgi_sdk_t_plmn_id_set)
    nr_cell_id = property(_xapp_usr_sdk.nr_cgi_sdk_t_nr_cell_id_get, _xapp_usr_sdk.nr_cgi_sdk_t_nr_cell_id_set)

    def __init__(self):
        _xapp_usr_sdk.nr_cgi_sdk_t_swiginit(self, _xapp_usr_sdk.new_nr_cgi_sdk_t())
    __swig_destroy__ = _xapp_usr_sdk.delete_nr_cgi_sdk_t

# Register nr_cgi_sdk_t in _xapp_usr_sdk:
_xapp_usr_sdk.nr_cgi_sdk_t_swigregister(nr_cgi_sdk_t)
class cell_global_id_sdk_t(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    type = property(_xapp_usr_sdk.cell_global_id_sdk_t_type_get, _xapp_usr_sdk.cell_global_id_sdk_t_type_set)
    nr_cgi = property(_xapp_usr_sdk.cell_global_id_sdk_t_nr_cgi_get, _xapp_usr_sdk.cell_global_id_sdk_t_nr_cgi_set)

    def __init__(self):
        _xapp_usr_sdk.cell_global_id_sdk_t_swiginit(self, _xapp_usr_sdk.new_cell_global_id_sdk_t())
    __swig_destroy__ = _xapp_usr_sdk.delete_cell_global_id_sdk_t

# Register cell_global_id_sdk_t in _xapp_usr_sdk:
_xapp_usr_sdk.cell_global_id_sdk_t_swigregister(cell_global_id_sdk_t)
class hand_over_info_t(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    target_pci = property(_xapp_usr_sdk.hand_over_info_t_target_pci_get, _xapp_usr_sdk.hand_over_info_t_target_pci_set)
    target_ssb_nr_arfcn = property(_xapp_usr_sdk.hand_over_info_t_target_ssb_nr_arfcn_get, _xapp_usr_sdk.hand_over_info_t_target_ssb_nr_arfcn_set)
    sz_nghbr_cell = property(_xapp_usr_sdk.hand_over_info_t_sz_nghbr_cell_get, _xapp_usr_sdk.hand_over_info_t_sz_nghbr_cell_set)

    def __init__(self):
        _xapp_usr_sdk.hand_over_info_t_swiginit(self, _xapp_usr_sdk.new_hand_over_info_t())
    __swig_destroy__ = _xapp_usr_sdk.delete_hand_over_info_t

# Register hand_over_info_t in _xapp_usr_sdk:
_xapp_usr_sdk.hand_over_info_t_swigregister(hand_over_info_t)
class ue_ho_info_t(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ue = property(_xapp_usr_sdk.ue_ho_info_t_ue_get, _xapp_usr_sdk.ue_ho_info_t_ue_set)
    ho = property(_xapp_usr_sdk.ue_ho_info_t_ho_get, _xapp_usr_sdk.ue_ho_info_t_ho_set)

    def __init__(self):
        _xapp_usr_sdk.ue_ho_info_t_swiginit(self, _xapp_usr_sdk.new_ue_ho_info_t())
    __swig_destroy__ = _xapp_usr_sdk.delete_ue_ho_info_t

# Register ue_ho_info_t in _xapp_usr_sdk:
_xapp_usr_sdk.ue_ho_info_t_swigregister(ue_ho_info_t)
class node_data_t(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    node = property(_xapp_usr_sdk.node_data_t_node_get, _xapp_usr_sdk.node_data_t_node_set)
    ue_ho = property(_xapp_usr_sdk.node_data_t_ue_ho_get, _xapp_usr_sdk.node_data_t_ue_ho_set)
    sz_ue = property(_xapp_usr_sdk.node_data_t_sz_ue_get, _xapp_usr_sdk.node_data_t_sz_ue_set)
    cell = property(_xapp_usr_sdk.node_data_t_cell_get, _xapp_usr_sdk.node_data_t_cell_set)
    sz_cell = property(_xapp_usr_sdk.node_data_t_sz_cell_get, _xapp_usr_sdk.node_data_t_sz_cell_set)

    def __init__(self):
        _xapp_usr_sdk.node_data_t_swiginit(self, _xapp_usr_sdk.new_node_data_t())
    __swig_destroy__ = _xapp_usr_sdk.delete_node_data_t

# Register node_data_t in _xapp_usr_sdk:
_xapp_usr_sdk.node_data_t_swigregister(node_data_t)

def free_node_data(n):
    return _xapp_usr_sdk.free_node_data(n)

def free_node_data_wrapper(v):
    return _xapp_usr_sdk.free_node_data_wrapper(v)

def cp_node_data(src):
    return _xapp_usr_sdk.cp_node_data(src)
class arr_node_data_t(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    n = property(_xapp_usr_sdk.arr_node_data_t_n_get, _xapp_usr_sdk.arr_node_data_t_n_set)
    sz = property(_xapp_usr_sdk.arr_node_data_t_sz_get, _xapp_usr_sdk.arr_node_data_t_sz_set)

    def __init__(self):
        _xapp_usr_sdk.arr_node_data_t_swiginit(self, _xapp_usr_sdk.new_arr_node_data_t())
    __swig_destroy__ = _xapp_usr_sdk.delete_arr_node_data_t

# Register arr_node_data_t in _xapp_usr_sdk:
_xapp_usr_sdk.arr_node_data_t_swigregister(arr_node_data_t)

def free_arr_node_data(arr):
    return _xapp_usr_sdk.free_arr_node_data(arr)

def free_arr_node_data_wrapper(v):
    return _xapp_usr_sdk.free_arr_node_data_wrapper(v)
DL_BWP_CONTEXT_SDK = _xapp_usr_sdk.DL_BWP_CONTEXT_SDK
UL_BWP_CONTEXT_SDK = _xapp_usr_sdk.UL_BWP_CONTEXT_SDK
SUL_BWP_CONTEXT_SDK = _xapp_usr_sdk.SUL_BWP_CONTEXT_SDK
END_BWP_CONTEXT_SDK = _xapp_usr_sdk.END_BWP_CONTEXT_SDK

def eq_global_e2_node_id_sdk(m0, m1):
    return _xapp_usr_sdk.eq_global_e2_node_id_sdk(m0, m1)

def cp_global_e2_node_id_sdk(src):
    return _xapp_usr_sdk.cp_global_e2_node_id_sdk(src)

def cp_cell_global_id_sdk(src):
    return _xapp_usr_sdk.cp_cell_global_id_sdk(src)

def cp_ue_id_e2sm_sdk(src):
    return _xapp_usr_sdk.cp_ue_id_e2sm_sdk(src)

def cp_seq_arr_arr_node_sdk(src):
    return _xapp_usr_sdk.cp_seq_arr_arr_node_sdk(src)

def time_now_us_sdk():
    return _xapp_usr_sdk.time_now_us_sdk()

